package network;

//java.net

// 통신 : 데이터 교환
// 네트워크 : 다른 컴퓨터 와의 데이터 교환 - 데이터 입출력

//내 컴퓨터 - 친구 컴퓨터 는 web을 사이에 두고 연결되어 있다.
//웹으로 연결된 수많은 컴퓨터들중 특정 컴퓨터까지의 위치를 나타내는 것이 IP이다.
//그리고 그 컴퓨터에서 특정 프로그램 까지의 위치는 port라고 한다. (0 ~ 65535)

//결과가 돌아오는 방식(카톡에서 상대방이 읽는 순간 1이 사라진다) : TCP방식  
//결과가 되돌아오지 않는 방식(우편, 착신여부를 알 수 없다.) : UDP

//TCP는 높은 신뢰율(확인이 가능 한 점)을 가지지만, 되돌아오는 과정, 대기가 발생되기 때문에 느리다. 
//A->B->A구조의 통신에서 B->A구간을 변조시키켜서 B->C로 바꾸면 A는 계속해서 대기된다.
//(10만을 보내면 10만 만큼 기다린다 - DIDOS)

//UDP는 보낸 뒤의 작업이 없기 때문에, 사내 네트워크등에서 주로 사용한다.

//클라이언트 : 전화 거는사람, 게임 이용자   ->   서버: 전화 받는 사람, 게임 회사
//클라이언트와 서버의 관계는 상황마다 바뀐다.
//전화기가 켜져있어야 전화가 가능한 것 처럼 서버는 클라이언트의 요청을 받을 준비를 해야 한다 : SERVERSOCKET
//또한 위치에 대한 내용을 알려주는 InetAddress
//연결이 끊기기 전에는 
//-> <- 두개의 방향을 묶어서 이동하는 서버와 클라이언트의 통로는 Socket을 이용 : 전화기 말하는 구멍, 듣는 구멍은 두개지만 1개의 선
//하나의 thread에서는 두개의 작업이 불가하기 때문에 보내는 thread 하나 받는 thread 하나 두개가 필요하다.


//1-1 유니 캐스트
//1-多 멀티 캐스트 : 카톡 단체방(그룹)
//ALL 브로드 캐스트 : MBC, KBS 보든 안보든 계속 보내는 방식

public class Network {
	public static void main(String[] args) {
		
	}
}
